# parameters
nc: 80  # number of classes
depth_multiple: 1  # model depth multiple
width_multiple: 1 # layer channel multiple

# anchors
anchors:
  - [10,13, 16,30, 33,23]  # P3/8 对应的检测层大小为80X80大小/可以用来检测大小在8X8以上的目标
  - [30,61, 62,45, 59,119]  # P4/16 40X40大小/
  - [116,90, 156,198, 373,326]  # P5/32 20X20大小/

backbone:
  # [from, number, module, args]
  [[-1, 1, Conv, [16, 6, 2, 2]],  # 0-P1/2
   [-1, 1, MV2Block, [24,  1, 4]],  # 1-p1/2   16x320x320
   [-1, 1, MV2Block, [24,  2, 4]],  # 2-P2/4   24x160x160
   [-1, 1, MV2Block, [24,  1, 4]],  # 3-P2/4   24x160x160
   [-1, 1, MV2Block, [48,  1, 4]],  # 4-P2/4   32x80x80
   [-1, 1, MV2Block, [48,  2, 4]],  # 5-P3/8   32x80x80
   [-1, 1, MobileViTBlock, [48, 64, 2, 48, 3,[2, 2], 120]],  # 6-P3/8  64x40x40
   [-1, 1, MV2Block, [64, 2, 4]],  # 7-P4/16   32x80x80
   [-1, 1, MobileViTBlock, [64, 80, 4, 64, 3, [2, 2], 320]],  # 8-P4/16  64x40x40
   [-1, 1, MV2Block, [80, 2, 4]],  # 9-P5/32  64x40x40
   [-1, 1, MobileViTBlock, [80, 96, 3, 80, 3, [2, 2], 384]],  # 10-P5/16 64x40x40
   [-1, 1, Conv, [512]],  # 11-P5/32 64x40x40
   [-1, 1, SPPF, [512, 5]],
  ]

# YOLOv5 head
head:
  [[-1, 1, Conv, [256, 1, 1]],
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [[-1, 8], 1, Concat, [1]],  # cat backbone P4
   [-1, 1, C3, [256, False]],  # 16 40*40

   [-1, 1, Conv, [128, 1, 1]],
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],#上采样操作，把小目标的特征传递下来
   [[-1, 6], 1, Concat, [1]],  # cat backbone P3
   [-1, 1, C3, [128, False]],  # 20 (P3/8-small) 80*80

   [-1, 1, Conv, [128, 3, 2]],
   [[-1, 16], 1, Concat, [1]],  # cat head P4
   [-1, 1, C3, [256, False]],  # 23 (P4/16-medium)

   [-1, 1, Conv, [256, 3, 2]],
   [[-1, 12], 1, Concat, [1]],  # cat head P5
   [-1, 1, C3, [512, False]],  # 23 (P5/32-large)

   [[19, 22, 25], 1, Detect, [nc, anchors]],  # Detect(P3, P4, P5)
  ]
