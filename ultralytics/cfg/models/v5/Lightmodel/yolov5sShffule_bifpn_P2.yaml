# YOLOv5 ðŸš€ by Ultralytics, GPL-3.0 license

# Parameters
nc: 80  # number of classes
depth_multiple: 0.33  # model depth multiple
width_multiple: 0.5  # layer channel multiple
anchors: 3
#  - [10,13, 16,30, 33,23]  # P3/8
#  - [30,61, 62,45, 59,119]  # P4/16
#  - [116,90, 156,198, 373,326]  # P5/32

# ShuffleNetV2 backbone
backbone:
  # [from, number, module, args]
  [[-1, 1, Conv_maxpool, [24]],    # 0-P2/4

   [-1, 1, ShuffleNetV2_InvertedResidual, [116, 2]], # 1-P3/8
   [-1, 3, ShuffleNetV2_InvertedResidual, [116, 1]], # 2

   [-1, 1, ShuffleNetV2_InvertedResidual, [232, 2]], # 3-P4/16
   [-1, 7, ShuffleNetV2_InvertedResidual, [232, 1]], # 4

   [-1, 1, ShuffleNetV2_InvertedResidual, [464, 2]], # 5-P5/32
   [-1, 3, ShuffleNetV2_InvertedResidual, [464, 1]], # 6

   [-1, 1, SPPF, [1024, 5]],  # 7
  ]

# YOLOv5 v6.0 head
head:
  [[-1, 1, Conv, [512, 1, 1]], # 8
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [4, 1, Conv, [512, 1, 1]], # 10 cat 4 P4
   [[-2, -1], 1, Concat_bifpn, [256, 256]],  # cat backbone P4
   [-1, 3, C3, [512, False]],  # 12

   [-1, 1, Conv, [256, 1, 1]], # 13
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [2, 1, Conv, [256, 1, 1]], # 15 cat 2 P3
   [[-2, -1], 1, Concat_bifpn, [128, 128]],  # cat backbone P3
   [-1, 3, C3, [256, False]],  # 17 (P3/8-small)

   [-1, 1, Conv, [256, 1, 1]], # 18
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [0, 1, Conv, [256, 1, 1]], # 15 cat 0 P2
   [[-2, -1], 1, Concat_bifpn, [128, 128]],  # cat backbone P2
   [-1, 3, C3, [256, False]],  # 17 (P3/8-small)

   [ -1, 1, Conv, [ 256, 3, 2 ] ],
   [ 2, 1, Conv, [ 256, 1, 1 ] ], # 19 cat 13 P3
   [ [ -1, -2, 18], 1, Concat_bifpn, [ 128, 128 ] ], # cat head P3
   [ -1, 3, C3, [ 512, False ] ],  # 21 (P4/16-medium)

   [-1, 1, Conv, [256, 3, 2]],
   [4, 1, Conv, [256, 1, 1]], # 19 cat 13 P4
   [[-1, -2, 13], 1, Concat_bifpn, [128, 128]], # cat head P4
   [-1, 3, C3, [512, False]],  # 21 (P4/16-medium)

   [-1, 1, Conv, [512, 3, 2]],
   [8, 1, Conv, [512, 1, 1]], # 23 cat 8 P5
   [[-2, -1], 1, Concat_bifpn, [256,256]],  # cat head P5
   [-1, 3, C3, [1024, False]],  # 25 (P5/32-large)

   [[17, 21, 25], 1, Detect, [nc, anchors]],  # Detect(P3, P4, P5)
  ]
